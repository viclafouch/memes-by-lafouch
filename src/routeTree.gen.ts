/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as Public_authRouteRouteImport } from './routes/_public_auth/route'
import { Route as Public_authIndexRouteImport } from './routes/_public_auth/index'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminLibraryRouteImport } from './routes/admin/library'
import { Route as Public_authSignupRouteImport } from './routes/_public_auth/signup'
import { Route as Public_authLoginRouteImport } from './routes/_public_auth/login'
import { Route as Public_authWith_sidebarRouteRouteImport } from './routes/_public_auth/_with_sidebar/route'
import { Route as Public_authWith_sidebarFavoritesRouteImport } from './routes/_public_auth/_with_sidebar/favorites'
import { Route as Public_authWith_sidebarDownloaderRouteImport } from './routes/_public_auth/_with_sidebar/downloader'
import { Route as Public_authWith_sidebarStudioRouteRouteImport } from './routes/_public_auth/_with_sidebar/studio/route'
import { Route as Public_authWith_sidebarStudioIndexRouteImport } from './routes/_public_auth/_with_sidebar/studio/index'
import { Route as Public_authWith_sidebarRandomIndexRouteImport } from './routes/_public_auth/_with_sidebar/random/index'
import { Route as Public_authWith_sidebarMemesIndexRouteImport } from './routes/_public_auth/_with_sidebar/memes/index'
import { Route as Public_authWith_sidebarStudioMemeIdRouteImport } from './routes/_public_auth/_with_sidebar/studio/$memeId'
import { Route as Public_authWith_sidebarRandomMemeIdRouteImport } from './routes/_public_auth/_with_sidebar/random/$memeId'
import { Route as Public_authWith_sidebarMemesMemeIdRouteImport } from './routes/_public_auth/_with_sidebar/memes/$memeId'
import { ServerRoute as ApiBunnyServerRouteImport } from './routes/api/bunny'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth.$'

const rootServerRouteImport = createServerRootRoute()

const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const Public_authRouteRoute = Public_authRouteRouteImport.update({
  id: '/_public_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const Public_authIndexRoute = Public_authIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => Public_authRouteRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminLibraryRoute = AdminLibraryRouteImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => AdminRouteRoute,
} as any)
const Public_authSignupRoute = Public_authSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => Public_authRouteRoute,
} as any)
const Public_authLoginRoute = Public_authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => Public_authRouteRoute,
} as any)
const Public_authWith_sidebarRouteRoute =
  Public_authWith_sidebarRouteRouteImport.update({
    id: '/_with_sidebar',
    getParentRoute: () => Public_authRouteRoute,
  } as any)
const Public_authWith_sidebarFavoritesRoute =
  Public_authWith_sidebarFavoritesRouteImport.update({
    id: '/favorites',
    path: '/favorites',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const Public_authWith_sidebarDownloaderRoute =
  Public_authWith_sidebarDownloaderRouteImport.update({
    id: '/downloader',
    path: '/downloader',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const Public_authWith_sidebarStudioRouteRoute =
  Public_authWith_sidebarStudioRouteRouteImport.update({
    id: '/studio',
    path: '/studio',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const Public_authWith_sidebarStudioIndexRoute =
  Public_authWith_sidebarStudioIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => Public_authWith_sidebarStudioRouteRoute,
  } as any)
const Public_authWith_sidebarRandomIndexRoute =
  Public_authWith_sidebarRandomIndexRouteImport.update({
    id: '/random/',
    path: '/random/',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const Public_authWith_sidebarMemesIndexRoute =
  Public_authWith_sidebarMemesIndexRouteImport.update({
    id: '/memes/',
    path: '/memes/',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const Public_authWith_sidebarStudioMemeIdRoute =
  Public_authWith_sidebarStudioMemeIdRouteImport.update({
    id: '/$memeId',
    path: '/$memeId',
    getParentRoute: () => Public_authWith_sidebarStudioRouteRoute,
  } as any)
const Public_authWith_sidebarRandomMemeIdRoute =
  Public_authWith_sidebarRandomMemeIdRouteImport.update({
    id: '/random/$memeId',
    path: '/random/$memeId',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const Public_authWith_sidebarMemesMemeIdRoute =
  Public_authWith_sidebarMemesMemeIdRouteImport.update({
    id: '/memes/$memeId',
    path: '/memes/$memeId',
    getParentRoute: () => Public_authWith_sidebarRouteRoute,
  } as any)
const ApiBunnyServerRoute = ApiBunnyServerRouteImport.update({
  id: '/api/bunny',
  path: '/api/bunny',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof Public_authLoginRoute
  '/signup': typeof Public_authSignupRoute
  '/admin/library': typeof AdminLibraryRoute
  '/admin/users': typeof AdminUsersRoute
  '/': typeof Public_authIndexRoute
  '/studio': typeof Public_authWith_sidebarStudioRouteRouteWithChildren
  '/downloader': typeof Public_authWith_sidebarDownloaderRoute
  '/favorites': typeof Public_authWith_sidebarFavoritesRoute
  '/memes/$memeId': typeof Public_authWith_sidebarMemesMemeIdRoute
  '/random/$memeId': typeof Public_authWith_sidebarRandomMemeIdRoute
  '/studio/$memeId': typeof Public_authWith_sidebarStudioMemeIdRoute
  '/memes': typeof Public_authWith_sidebarMemesIndexRoute
  '/random': typeof Public_authWith_sidebarRandomIndexRoute
  '/studio/': typeof Public_authWith_sidebarStudioIndexRoute
}
export interface FileRoutesByTo {
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof Public_authLoginRoute
  '/signup': typeof Public_authSignupRoute
  '/admin/library': typeof AdminLibraryRoute
  '/admin/users': typeof AdminUsersRoute
  '/': typeof Public_authIndexRoute
  '/downloader': typeof Public_authWith_sidebarDownloaderRoute
  '/favorites': typeof Public_authWith_sidebarFavoritesRoute
  '/memes/$memeId': typeof Public_authWith_sidebarMemesMemeIdRoute
  '/random/$memeId': typeof Public_authWith_sidebarRandomMemeIdRoute
  '/studio/$memeId': typeof Public_authWith_sidebarStudioMemeIdRoute
  '/memes': typeof Public_authWith_sidebarMemesIndexRoute
  '/random': typeof Public_authWith_sidebarRandomIndexRoute
  '/studio': typeof Public_authWith_sidebarStudioIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_public_auth': typeof Public_authRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/_public_auth/_with_sidebar': typeof Public_authWith_sidebarRouteRouteWithChildren
  '/_public_auth/login': typeof Public_authLoginRoute
  '/_public_auth/signup': typeof Public_authSignupRoute
  '/admin/library': typeof AdminLibraryRoute
  '/admin/users': typeof AdminUsersRoute
  '/_public_auth/': typeof Public_authIndexRoute
  '/_public_auth/_with_sidebar/studio': typeof Public_authWith_sidebarStudioRouteRouteWithChildren
  '/_public_auth/_with_sidebar/downloader': typeof Public_authWith_sidebarDownloaderRoute
  '/_public_auth/_with_sidebar/favorites': typeof Public_authWith_sidebarFavoritesRoute
  '/_public_auth/_with_sidebar/memes/$memeId': typeof Public_authWith_sidebarMemesMemeIdRoute
  '/_public_auth/_with_sidebar/random/$memeId': typeof Public_authWith_sidebarRandomMemeIdRoute
  '/_public_auth/_with_sidebar/studio/$memeId': typeof Public_authWith_sidebarStudioMemeIdRoute
  '/_public_auth/_with_sidebar/memes/': typeof Public_authWith_sidebarMemesIndexRoute
  '/_public_auth/_with_sidebar/random/': typeof Public_authWith_sidebarRandomIndexRoute
  '/_public_auth/_with_sidebar/studio/': typeof Public_authWith_sidebarStudioIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/login'
    | '/signup'
    | '/admin/library'
    | '/admin/users'
    | '/'
    | '/studio'
    | '/downloader'
    | '/favorites'
    | '/memes/$memeId'
    | '/random/$memeId'
    | '/studio/$memeId'
    | '/memes'
    | '/random'
    | '/studio/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin'
    | '/login'
    | '/signup'
    | '/admin/library'
    | '/admin/users'
    | '/'
    | '/downloader'
    | '/favorites'
    | '/memes/$memeId'
    | '/random/$memeId'
    | '/studio/$memeId'
    | '/memes'
    | '/random'
    | '/studio'
  id:
    | '__root__'
    | '/_public_auth'
    | '/admin'
    | '/_public_auth/_with_sidebar'
    | '/_public_auth/login'
    | '/_public_auth/signup'
    | '/admin/library'
    | '/admin/users'
    | '/_public_auth/'
    | '/_public_auth/_with_sidebar/studio'
    | '/_public_auth/_with_sidebar/downloader'
    | '/_public_auth/_with_sidebar/favorites'
    | '/_public_auth/_with_sidebar/memes/$memeId'
    | '/_public_auth/_with_sidebar/random/$memeId'
    | '/_public_auth/_with_sidebar/studio/$memeId'
    | '/_public_auth/_with_sidebar/memes/'
    | '/_public_auth/_with_sidebar/random/'
    | '/_public_auth/_with_sidebar/studio/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Public_authRouteRoute: typeof Public_authRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/bunny': typeof ApiBunnyServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/bunny': typeof ApiBunnyServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/bunny': typeof ApiBunnyServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/bunny' | '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/bunny' | '/api/auth/$'
  id: '__root__' | '/api/bunny' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiBunnyServerRoute: typeof ApiBunnyServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public_auth': {
      id: '/_public_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Public_authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public_auth/': {
      id: '/_public_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof Public_authIndexRouteImport
      parentRoute: typeof Public_authRouteRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/library': {
      id: '/admin/library'
      path: '/library'
      fullPath: '/admin/library'
      preLoaderRoute: typeof AdminLibraryRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/_public_auth/signup': {
      id: '/_public_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof Public_authSignupRouteImport
      parentRoute: typeof Public_authRouteRoute
    }
    '/_public_auth/login': {
      id: '/_public_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof Public_authLoginRouteImport
      parentRoute: typeof Public_authRouteRoute
    }
    '/_public_auth/_with_sidebar': {
      id: '/_public_auth/_with_sidebar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Public_authWith_sidebarRouteRouteImport
      parentRoute: typeof Public_authRouteRoute
    }
    '/_public_auth/_with_sidebar/favorites': {
      id: '/_public_auth/_with_sidebar/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof Public_authWith_sidebarFavoritesRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
    '/_public_auth/_with_sidebar/downloader': {
      id: '/_public_auth/_with_sidebar/downloader'
      path: '/downloader'
      fullPath: '/downloader'
      preLoaderRoute: typeof Public_authWith_sidebarDownloaderRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
    '/_public_auth/_with_sidebar/studio': {
      id: '/_public_auth/_with_sidebar/studio'
      path: '/studio'
      fullPath: '/studio'
      preLoaderRoute: typeof Public_authWith_sidebarStudioRouteRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
    '/_public_auth/_with_sidebar/studio/': {
      id: '/_public_auth/_with_sidebar/studio/'
      path: '/'
      fullPath: '/studio/'
      preLoaderRoute: typeof Public_authWith_sidebarStudioIndexRouteImport
      parentRoute: typeof Public_authWith_sidebarStudioRouteRoute
    }
    '/_public_auth/_with_sidebar/random/': {
      id: '/_public_auth/_with_sidebar/random/'
      path: '/random'
      fullPath: '/random'
      preLoaderRoute: typeof Public_authWith_sidebarRandomIndexRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
    '/_public_auth/_with_sidebar/memes/': {
      id: '/_public_auth/_with_sidebar/memes/'
      path: '/memes'
      fullPath: '/memes'
      preLoaderRoute: typeof Public_authWith_sidebarMemesIndexRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
    '/_public_auth/_with_sidebar/studio/$memeId': {
      id: '/_public_auth/_with_sidebar/studio/$memeId'
      path: '/$memeId'
      fullPath: '/studio/$memeId'
      preLoaderRoute: typeof Public_authWith_sidebarStudioMemeIdRouteImport
      parentRoute: typeof Public_authWith_sidebarStudioRouteRoute
    }
    '/_public_auth/_with_sidebar/random/$memeId': {
      id: '/_public_auth/_with_sidebar/random/$memeId'
      path: '/random/$memeId'
      fullPath: '/random/$memeId'
      preLoaderRoute: typeof Public_authWith_sidebarRandomMemeIdRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
    '/_public_auth/_with_sidebar/memes/$memeId': {
      id: '/_public_auth/_with_sidebar/memes/$memeId'
      path: '/memes/$memeId'
      fullPath: '/memes/$memeId'
      preLoaderRoute: typeof Public_authWith_sidebarMemesMemeIdRouteImport
      parentRoute: typeof Public_authWith_sidebarRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/bunny': {
      id: '/api/bunny'
      path: '/api/bunny'
      fullPath: '/api/bunny'
      preLoaderRoute: typeof ApiBunnyServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface Public_authWith_sidebarStudioRouteRouteChildren {
  Public_authWith_sidebarStudioMemeIdRoute: typeof Public_authWith_sidebarStudioMemeIdRoute
  Public_authWith_sidebarStudioIndexRoute: typeof Public_authWith_sidebarStudioIndexRoute
}

const Public_authWith_sidebarStudioRouteRouteChildren: Public_authWith_sidebarStudioRouteRouteChildren =
  {
    Public_authWith_sidebarStudioMemeIdRoute:
      Public_authWith_sidebarStudioMemeIdRoute,
    Public_authWith_sidebarStudioIndexRoute:
      Public_authWith_sidebarStudioIndexRoute,
  }

const Public_authWith_sidebarStudioRouteRouteWithChildren =
  Public_authWith_sidebarStudioRouteRoute._addFileChildren(
    Public_authWith_sidebarStudioRouteRouteChildren,
  )

interface Public_authWith_sidebarRouteRouteChildren {
  Public_authWith_sidebarStudioRouteRoute: typeof Public_authWith_sidebarStudioRouteRouteWithChildren
  Public_authWith_sidebarDownloaderRoute: typeof Public_authWith_sidebarDownloaderRoute
  Public_authWith_sidebarFavoritesRoute: typeof Public_authWith_sidebarFavoritesRoute
  Public_authWith_sidebarMemesMemeIdRoute: typeof Public_authWith_sidebarMemesMemeIdRoute
  Public_authWith_sidebarRandomMemeIdRoute: typeof Public_authWith_sidebarRandomMemeIdRoute
  Public_authWith_sidebarMemesIndexRoute: typeof Public_authWith_sidebarMemesIndexRoute
  Public_authWith_sidebarRandomIndexRoute: typeof Public_authWith_sidebarRandomIndexRoute
}

const Public_authWith_sidebarRouteRouteChildren: Public_authWith_sidebarRouteRouteChildren =
  {
    Public_authWith_sidebarStudioRouteRoute:
      Public_authWith_sidebarStudioRouteRouteWithChildren,
    Public_authWith_sidebarDownloaderRoute:
      Public_authWith_sidebarDownloaderRoute,
    Public_authWith_sidebarFavoritesRoute:
      Public_authWith_sidebarFavoritesRoute,
    Public_authWith_sidebarMemesMemeIdRoute:
      Public_authWith_sidebarMemesMemeIdRoute,
    Public_authWith_sidebarRandomMemeIdRoute:
      Public_authWith_sidebarRandomMemeIdRoute,
    Public_authWith_sidebarMemesIndexRoute:
      Public_authWith_sidebarMemesIndexRoute,
    Public_authWith_sidebarRandomIndexRoute:
      Public_authWith_sidebarRandomIndexRoute,
  }

const Public_authWith_sidebarRouteRouteWithChildren =
  Public_authWith_sidebarRouteRoute._addFileChildren(
    Public_authWith_sidebarRouteRouteChildren,
  )

interface Public_authRouteRouteChildren {
  Public_authWith_sidebarRouteRoute: typeof Public_authWith_sidebarRouteRouteWithChildren
  Public_authLoginRoute: typeof Public_authLoginRoute
  Public_authSignupRoute: typeof Public_authSignupRoute
  Public_authIndexRoute: typeof Public_authIndexRoute
}

const Public_authRouteRouteChildren: Public_authRouteRouteChildren = {
  Public_authWith_sidebarRouteRoute:
    Public_authWith_sidebarRouteRouteWithChildren,
  Public_authLoginRoute: Public_authLoginRoute,
  Public_authSignupRoute: Public_authSignupRoute,
  Public_authIndexRoute: Public_authIndexRoute,
}

const Public_authRouteRouteWithChildren =
  Public_authRouteRoute._addFileChildren(Public_authRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminLibraryRoute: typeof AdminLibraryRoute
  AdminUsersRoute: typeof AdminUsersRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminLibraryRoute: AdminLibraryRoute,
  AdminUsersRoute: AdminUsersRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  Public_authRouteRoute: Public_authRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiBunnyServerRoute: ApiBunnyServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
